#!/bin/bash
#
# Greps a given pattern on files with given file masks below the cwd and replaces it  with a given
# string after asking for confirmation.
#
# author: andreasl

function show_usage {
    script_name="${0##*/}"

    msg="${script_name}\n"
    msg="${msg}Greps a given pattern on files with given file masks below the cwd and replaces it"
    msg="${msg} with a given string after asking for confirmation."
    msg="${msg}\n"
    msg="${msg}Usage:\n"
    msg="${msg}  ${script_name} <search-pattern> <replace-string> <file-pattern>...\n"
    msg="${msg}\n"
    msg="${msg}Examples:\n"
    msg="${msg}  ${script_name} 'echo' 'printf' *.sh            # replaces 'echo' with 'printf' in all *.sh files below the cwd\n"
    msg="${msg}  ${script_name} '2018' '2019' *.txt *.md        # replaces '2018' with '2019' in all *.txt and *.md files below the cwd\n"
    msg="${msg}  ${script_name} 'wind|rain' sun vacation.txt    # replaces all matching text passages with 'sun' in files called "vacation.txt"\n"
    msg="${msg}  ${script_name} -h                              # prints the usage message\n"
    msg="${msg}  ${script_name} --help                          # prints the usage message\n"
    printf "$msg"
}

if [ "$#" -lt 3 ] || [[ "$1" =~ ^(-h|--help)$ ]] ; then
    show_usage
    exit 1
fi

to_look_for="$1"
shift
to_replace_with="$1"
shift

for file in "$@" ; do
    # preview
    grep -HRn --color --include "$file" "$to_look_for" .
done

read -r -e -n1 -p 'Do you want to continue? (y)es, (n)o, (i)nteractive [yY/nN/iI]: ' yes_no_i
if [[ "$yes_no_i" == [iI] ]] ; then
    interactive=true
elif [[ "$yes_no_i" != [yY] ]] ; then
    exit 0
fi

files=()
files_lines=($(grep -HRl "$to_look_for" .))
while IFS= read -r line; do
    files+=("$line")
done <<< "$files_lines"


for file in "${files[@]}" ; do
    # replace

    if [ "$interactive" == true ] ; then
        printf 'In file %s:\n' "$file"
        grep -Hn --color "$to_look_for" "$file"
        read -r -e -n1 -p 'Change occurences in this file? [yY/nN]: ' yes_no
        if [[ "$yes_no" != [yY] ]] ; then
            continue
        fi

    sed -i "s@$to_look_for@$to_replace_with@g" "$file" \;  # Gnu sed version
    #sed -i '' "s@$to_look_for@$to_replace_with@g" "$file" \;  # Mac sed version
done

for file in "$@" ; do
    # review
    grep -Hrn --color --include "$file" "$to_replace_with" .
done